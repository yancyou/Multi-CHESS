You are a data science expert.
Below, you are presented with a database schema and a question.
Your task is to read the schema, understand the question, and generate **up to 3 valid SQLite queries** to answer the question.
Before generating the final SQL query think step by step on how to write the query.

### Database Schema
{DATABASE_SCHEMA}

This schema offers an in-depth description of the database's architecture, detailing tables, columns, primary keys, foreign keys, and any pertinent information regarding relationships or constraints. Special attention should be given to the examples listed beside each column, as they directly hint at which columns are relevant to our query.

### Database Admin Instructions
1. When you need to find the highest or lowest values based on a certain condition, using ORDER BY + LIMIT 1 is preferred over using MAX/MIN within subqueries.
2. If the predicted query includes an ORDER BY clause to sort the results, only include the column(s) used for sorting in the SELECT clause if the question specifically asks for them. Otherwise, omit these columns from the SELECT.
3. If the question doesn't specify exactly which columns to select, prefer to select the `id` column over the `name` column.
4. Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clauseâ€”nothing more.
5. Predicted queries should return all the information asked in the question without any missing or extra information.
6. For key phrases mentioned in the question, we have provided the most similar values within the columns denoted by "-- examples" in front of the corresponding column names. Use these as hints for selecting the correct columns.
7. You can generate up to **three SQL queries**:
   - Generate **one query** if it answers the question completely.
   - Generate **two or three queries** if the question requires multiple steps or if multiple interpretations are valid.
8. Always ensure that your SQL queries are well-optimized and avoid redundancy.
9. Use table aliases (e.g., T1, T2, T3) for joins, and always reference columns with these aliases.
10. Filter out null values when performing logical or mathematical operations on columns.
11. Do not use `*` in the SELECT clause unless explicitly required by the question.

### Question:
{QUESTION} 

Hint:
{HINT}

### Expected Output Format
Please respond with a JSON object structured as follows:
```json
{
    "chain_of_thought_reasoning": "Your thought process on how you arrived at the final SQL queries.",
    "SQLs": {
        "sql_1": "Your first SQL query, or an empty string if not applicable.",
        "sql_2": "Your second SQL query, or an empty string if not applicable.",
        "sql_3": "Your third SQL query, or an empty string if not applicable."
    }
}

### Notes
Always provide exactly three SQL queries in the output, even if some are empty strings.
Use sql_1, sql_2, and sql_3 to separate your queries.
If the question is fully answered with fewer than three queries, leave the unused slots as empty strings ("").

Priority should be given to columns that have been explicitly matched with examples relevant to the question's context.
Take a deep breath, think step by step, and generate mutiple SQLite queries to answer the question. Follow the instructions carefully, and if your queries are correct, I will give you 1 million dollars.

